services:
  ms-nextjs-template:
    image: node:20
    container_name: ms-nextjs-template
    hostname: "ms-nextjs-template"
    volumes:
      - E:/project/microservice_template/frontend:/app
    working_dir: /app
    environment:
      - WATCHPACK_POLLING=true
    # First, run npm install to ensure dependencies are present, then start the dev server.
    command: sh -c "npm install && npm run dev"
    ports:
      - "30102:3000"
    networks:
      - network-ms-template

  ms-maple-drop-repo:
    image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
    container_name: ms-maple-drop-repo
    hostname: "ms-maple-drop-repo"
    volumes:
      - E:\project\microservice_template\backend\ms-maple-drop-repo:/app
    working_dir: /app
    command: sh -c "uv venv && uv sync && .venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      MYSQL_HOST: host.docker.internal:10370
      MYSQL_USER: root
      MYSQL_PASSWORD:  ${ITEM_DATA_DB_PASSWORD}
      MYSQL_DATABASE: TsmcMapleStoryV113
    networks:
      - network-ms-template

  ms-name-resolver:
    image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
    container_name: ms-name-resolver
    hostname: "ms-name-resolver"
    volumes:
      - E:\project\microservice_template\backend\ms-name-resolver:/app
    working_dir: /app
    command: sh -c "uv venv && uv sync && .venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      MONGO_URI: "mongodb://host.docker.internal:30370/?directConnection=true"
    networks:
      - network-ms-template

  ms-search-aggregator:
    image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
    container_name: ms-search-aggregator
    hostname: "ms-search-aggregator"
    volumes:
      - E:\project\microservice_template\backend\ms-search-aggregator:/app
    working_dir: /app
    command: sh -c "uv venv && uv sync && .venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - network-ms-template

  ms-image-retriever:
    image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
    container_name: ms-image-retriever
    hostname: "ms-image-retriever"
    volumes:
      - E:\project\microservice_template\backend\ms-image-retriever:/app
    working_dir: /app
    command: sh -c "uv venv && uv sync && .venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      MINIO_ENDPOINT: host.docker.internal:30831
      MINIO_BUCKET: maplestory
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - network-ms-template

  ms-image-cache:
    image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
    container_name: ms-image-cache
    hostname: "ms-image-cache"
    volumes:
      - E:\project\microservice_template\backend\ms-image-cache:/app
    working_dir: /app
    command: sh -c "uv venv && uv sync && .venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "30104:8000"
    environment:
      REDIS_HOST: host.docker.internal
      REDIS_PORT: 30930
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_CACHE_EXPIRATION_SECONDS: 3600
    networks:
      - network-ms-template

networks:
  network-ms-template:
